<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="scdx.group17.dao.ExamMapper">
    <resultMap id="ExamResultMap" type="scdx.group17.entity.Exam">
        <id column="tes_id" property="tes_id" jdbcType="INTEGER"/>
        <id column="tID" property="tID" jdbcType="INTEGER"/>
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="deadline" property="deadline" jdbcType="DATE"/>
        <result column="grade" property="grade" jdbcType="INTEGER"/>
        <result column="time" property="time" jdbcType="TIME"/>
    </resultMap>

    <!--Get By Id-->
    <select id="getAllExamById" resultMap="ExamResultMap">
        SELECT * FROM exam WHERE id = #{id} ORDER BY deadline DESC
    </select>
    <!--Get DoneCount By Id-->
    <select id="getDoneCountById" resultType="java.lang.Integer">
        SELECT count(*) FROM exam WHERE id = #{id} AND grade >= 0
    </select>
    <!--Get UnDoneCount By Id-->
    <select id="getUnDoneCountById" resultType="java.lang.Integer">
        SELECT count(*) FROM exam WHERE id = #{id} AND grade = -1
    </select>
    <select id="delByStuId" parameterType="scdx.group17.entity.Exam">
        DELETE FROM exam WHERE id = #{id}
    </select>
    <insert id="addNewExam" parameterType="scdx.group17.entity.Exam">
        INSERT INTO exam(id, tes_id, tID, deadline, time,title) VALUES (#{id},#{tes_id},#{tID},#{deadline},#{time},#{title})
    </insert>
    <select id="getsomeUnDoneByStuId" resultMap="ExamResultMap">
        SELECT * FROM exam WHERE title LIKE '%${query}%' AND grade = -1 AND id = #{id} ORDER BY deadline DESC
    </select>
    <select id="getsomeDoneByStuId" resultMap="ExamResultMap">
        SELECT * FROM exam WHERE title LIKE '%${query}%' AND grade >= 0 AND id = #{id} ORDER BY deadline DESC
    </select>

    <update id="updateScore" parameterType="scdx.group17.entity.Exam">
        UPDATE exam SET grade = grade + #{grade} WHERE id = #{id} AND tID = #{tID}
    </update>

    <select id="getByTid" resultMap="ExamResultMap">
        SELECT * FROM exam WHERE tID = #{tID} AND id = #{id}
    </select>

    <select id="getMax" resultType="java.lang.Integer">
        SELECT max(tID) FROM exam
    </select>
</mapper>